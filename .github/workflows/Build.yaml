name: ROS2-Foxy

on:
  workflow_dispatch:
  schedule:
  - cron: 0 0 * * *
  pull_request:
    paths-ignore:
    - "docs/**"
    - "mkdocs.yml"
    - "README.md"
    
jobs:
  job1:
    name: Build
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2-beta

      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.1
        with:
          required-ros-distributions: foxy

      - name: Copy repository
        run: |
          mkdir -p ~/ros2_ws/src/scenario_simulator_v2
          cp -rf . ~/ros2_ws/src/scenario_simulator_v2

      - name: Install dependencies
        run: |
          source /opt/ros/foxy/setup.bash
          sudo apt install -y python3-pip python3-rosdep2 python3-vcstool python3-colcon-common-extensions
          rosdep update
          cd ~/ros2_ws
          vcs import src < src/scenario_simulator_v2/dependency.repos
          rosdep install -iry --from-paths src --rosdistro foxy

      - name: Clone autoware packages
        run: |
          cd ~/ros2_ws/src
          git clone -b ros2 https://github.com/tier4/pilot.auto.git
          mv -v pilot.auto/awapi/autoware_api_msgs              ./
          mv -v pilot.auto/common/msgs/autoware_control_msgs    ./
          mv -v pilot.auto/common/msgs/autoware_debug_msgs      ./
          mv -v pilot.auto/common/msgs/autoware_perception_msgs ./
          mv -v pilot.auto/common/msgs/autoware_planning_msgs   ./
          mv -v pilot.auto/common/msgs/autoware_system_msgs     ./
          mv -v pilot.auto/common/msgs/autoware_vehicle_msgs    ./
          rm -rf pilot.auto

      - name: Build packages
        run: |
          source /opt/ros/foxy/setup.bash
          cd ~/ros2_ws
          colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release

      - name: Test packages
        run: |
          source /opt/ros/foxy/setup.bash
          source ~/ros2_ws/install/setup.bash
          cd ~/ros2_ws
          colcon test
          colcon test-result --verbose

      - name: Scenario test
        run: |
          source ~/ros2_ws/install/setup.bash
          ros2 launch scenario_test_runner scenario_test_runner.launch.py workflow:='$(find-pkg-share scenario_test_runner)/workflow_example.yaml'
          ros2 run scenario_test_runner result_checker /tmp/scenario_test_runner/result.junit.xml

      - name: Notify Slack
        uses: 8398a7/action-slack@v2
        if: failure()
        with:
          status: ${{ job.status }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
