name: Release
on:
  pull_request:
    branches:
      - master
  merge_group:
    types: [checks_requested]
    
jobs:
  save_label_as_cache:
    name: SaveLabelAsCache
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' }}
    timeout-minutes: 10
    steps:
      - uses: KyoriPowered/action-regex-match@v3
        id: key
        with:
          text: ${{ github.event.pull_request._links.self.href }}
          regex: 'pulls/([0-9]+)'
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          fetch-tags: true
      # - name: Clear cache
      #   run: gh cache delete label-pr-${{ steps.key.outputs.group1 }}
      #   env:
      #     GH_TOKEN: ${{ secrets.BLOOM_GITHUB_TOKEN }}
      #   continue-on-error: true
      # - name: Cache label
      #   uses: actions/cache@v4
      #   with:
      #     path: semantic_version_bump.txt
      #     key: label-pr-${{ steps.key.outputs.group1 }}
      #     save-always: true
      - name: is_bump_patch
        if: contains(github.event.pull_request.labels.*.name, 'bump patch')
        run: |
          echo patch > semantic_version_bump.txt
      - name: is_bump_minor
        if: contains(github.event.pull_request.labels.*.name, 'bump minor')
        run: |
          echo minor > semantic_version_bump.txt
      - name: is_bump_major
        if: contains(github.event.pull_request.labels.*.name, 'bump major')
        run: |
          echo major > semantic_version_bump.txt
      - uses: actions/upload-artifact@v4
        with:
          name: label-pr-${{ steps.key.outputs.group1 }}
          path: semantic_version_bump.txt

  release:
    name: Release
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    container: ros:humble
    steps:
      - name: install bloom
        if: ${{ github.event_name != 'pull_request' }}
        run: apt update && apt install -y python3-bloom git
      - name: checkout
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          ref: master
          fetch-depth: 0
          fetch-tags: true
      - name: Setup git user
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git config --global user.name  "Release Bot"
          git config --global user.email "action@github.com"
          git config --global --add safe.directory /__w/scenario_simulator_v2/scenario_simulator_v2
      - uses: KyoriPowered/action-regex-match@v3
        if: ${{ github.event_name != 'pull_request' }}
        id: get_restore_key
        with:
          text: ${{ github.event.merge_group.head_ref }}
          regex: 'master/pr-([0-9]+)'
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Merge branch
        if: ${{ github.event_name != 'pull_request' }}
        run: git merge ${{ github.event.merge_group.head_ref }}
      - uses: actions/download-artifact@v4
        if: ${{ github.event_name != 'pull_request' }}
        with:
          name: label-pr-${{ steps.get_restore_key.outputs.group1 }}
      # - name: Restore labels from cache
      #   if: ${{ github.event_name != 'pull_request' }}
      #   uses: actions/cache@v4
      #   with:
      #     path: semantic_version_bump.txt
      #     key: label-pr-${{ steps.get_restore_key.outputs.group1 }}
      #     fail-on-cache-miss: true
      - name: bump version
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          catkin_generate_changelog -y
          catkin_tag_changelog --bump $(cat semantic_version_bump.txt)
          catkin_package_version --bump $(cat semantic_version_bump.txt)
      - name: commit changes
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git add .
          git commit -m "Bump version of scenario_simulator_v2 to version $(catkin_package_version)"
          git push
          git tag -a $(catkin_package_version) -m "release $(catkin_package_version)"
          git push origin $(catkin_package_version)
        working-directory: scenario_simulator_v2
