name: Release
on:
  pull_request:
    branches:
      - master
    types:
      - closed
      - created
      - edited
      - labeled
      - opened
      - reopened
      - synchronize
      - unlabeled
concurrency: release
    
jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      issues: write
      packages: write
      pull-requests: write
      repository-projects: write
      security-events: write
      statuses: write
    timeout-minutes: 10
    container: ros:humble
    steps:
      - name: Restore branch
        uses: levonet/action-restore-branch@master
      - name: Install bloom
        run: apt update && apt install -y python3-bloom git
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
          fetch-tags: true
      - name: Setup git
        run: |
          git config --global user.name  "Release Bot"
          git config --global user.email "action@github.com"
          git config --global --add safe.directory /__w/scenario_simulator_v2/scenario_simulator_v2
          git config --global credential.helper ${{ secrets.GITHUB_TOKEN }}
          git config pull.rebase false
      - name: Get old version
        id: old_version
        run: |
          echo "old_version=$(catkin_package_version)" >> $GITHUB_OUTPUT
      - name: Merge branch
        run: git pull origin ${{ github.head_ref }}
      - name: bump patch version
        if: (contains(github.event.pull_request.labels.*.name, 'bump patch'))
        run: |
          catkin_generate_changelog -y
          catkin_tag_changelog --bump patch
          catkin_package_version --bump patch
      - name: bump minor version
        if: (contains(github.event.pull_request.labels.*.name, 'bump minor'))
        run: |
          catkin_generate_changelog -y
          catkin_tag_changelog --bump minor
          catkin_package_version --bump minor
      - name: bump major version
        if: (contains(github.event.pull_request.labels.*.name, 'bump major'))
        run: |
          catkin_generate_changelog -y
          catkin_tag_changelog --bump major
          catkin_package_version --bump major
      - name: Get new version
        id: new_version
        run: |
          echo "new_version=$(catkin_package_version)" >> $GITHUB_OUTPUT
      - name: commit changes
        if: github.event.pull_request.merged == true
        run: |
          git add .
          git commit -m "Bump version of scenario_simulator_v2 from version ${{ steps.old_version.outputs.old_version }} to version ${{ steps.new_version.outputs.new_version }}"
      - name: Pushing to the protected branch 'master'
        if: github.event.pull_request.merged == true
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.BLOOM_GITHUB_TOKEN }}
          branch: master
          force: true
      - name: Delete branch
        if: github.event.pull_request.merged == true
        uses: SvanBoxel/delete-merged-branch@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get linked issues
        # if: github.event.pull_request.merged == true
        id: linked_issues
        uses: mondeja/pr-linked-issues-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update release description
        id: get_release_description
        # if: github.event.pull_request.merged == true
        run: |
          echo "${{ github.event.pull_request.body }}" >> release_description.txt
          echo "## Pull Request  " >> release_description.txt
          echo "${{ github.event.pull_request.number }}" >> release_description.txt
          echo "## Related Issues  " >> release_description.txt
          echo "${{ steps.linked_issues.outputs.issues }}" >> release_description.txt
          cat release_description.txt
          echo "description=$(cat release_description.txt)" >> $GITHUB_OUTPUT
      - name: Create a gitHub release
        if: github.event.pull_request.merged == true
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.new_version.outputs.new_version }}
          name: ${{ steps.new_version.outputs.new_version }}
          body: ${{ steps.get_release_description.outputs.description }}
